@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model MillionTimesVaccinationsApp.ViewModels.MedicalInstitutionViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
 
<form method="get">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label for="name">Name</label>
                <input value="@ViewData["InstitutionsName"]" type="text" class="form-control" id="name" name="name" placeholder="Name">
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="region">Region</label>
                <input value="@ViewData["InstitutionsRegion"]" type="text" class="form-control" id="region" name="region" placeholder="Region">
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="city">City</label>
                <input value="@ViewData["InstitutionsCity"]" type="text" class="form-control" id="city" name="city" placeholder="City">
            </div>
        </div>
    </div>
    <div class="col-md-12 text-right">
        <button type="submit" class="btn btn-primary">Apply</button>
        <button asp-action="ClearFilters" type="submit" class="btn btn-secondary">Clear</button>
    </div>
</form>

<p>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Region
            </th>
            <th>
                City
            </th>
            <th>
                Street
            </th>
            <th>
                HouseNumber
            </th>
            <th>
                ApartmentNumber
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.MedicalInstitutions) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HouseNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApartmentNumber)
            </td>
            <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.MedicalInstitutionId">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.MedicalInstitutionId">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.MedicalInstitutionId">Delete</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.PageViewModel.HasPreviousPage)
        {
            <li class="page-item">
                <a asp-route-name="@ViewData["InstitutionsName"]" asp-route-region="@ViewData["InstitutionsRegion"]" asp-route-city="@ViewData["InstitutionsCity"]"
                    asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber - 1)" class="page-link">&laquo;</a>
            </li>
        }
        @for (int i = Model.PageViewModel.PageNumber; i < Model.PageViewModel.TotalPages && i < Model.PageViewModel.PageNumber + 3; i++)
        {
            @if (i == Model.PageViewModel.PageNumber)
            {
                <li class="page-item active">
                    <a asp-route-name="@ViewData["InstitutionsName"]" asp-route-region="@ViewData["InstitutionsRegion"]" asp-route-city="@ViewData["InstitutionsCity"]"
                        asp-action="Index" asp-route-page="@i" class="page-link active">@i</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a asp-route-name="@ViewData["InstitutionsName"]" asp-route-region="@ViewData["InstitutionsRegion"]" asp-route-city="@ViewData["InstitutionsCity"]"
                        asp-action="Index" asp-route-page="@i" class="page-link">@i</a>
                </li>
            }
        }
        @if (Model.PageViewModel.HasNextPage)
        {
            <li class="page-item">
                <a asp-route-name="@ViewData["InstitutionsName"]" asp-route-region="@ViewData["InstitutionsRegion"]" asp-route-city="@ViewData["InstitutionsCity"]"
                    asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber + 1)" class="page-link">&raquo;</a>
            </li>
        }
    </ul>
</nav>
